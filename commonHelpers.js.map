{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["'use strict'\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst BASE_URI = 'https://pixabay.com/api/';\nconst KEY = '42459298-1821cc9c9c9d24f5ec127ca7c';\n\nconst fetchImages = (userInput) => {\n    const searchLink = `${BASE_URI}?key=${KEY}&q=${userInput}&image-type=photo&orientation=horizontal&safesearch=true`;\n\n    return fetch(searchLink)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Image error!');\n            }\n            return response.json();\n        })\n        .then(data => {\n            if (data.hits.length === 0) {\n                iziToast.show({\n                    message: \"Sorry, there are no images matching your search query. Please try again!\",\n                    messageColor: '#FAFAFB',\n                    backgroundColor: '#EF4040',\n                    iconColor: '#FAFAFB',\n                    position: \"topRight\",\n                    theme: 'dark',\n                });\n            }\n            return data.hits;\n        })\n        .catch(error => {\n            console.log('Error fetching data:');\n        });\n};\n\nexport default fetchImages;\n","'use strict'\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\n\nconst renderPhotoList = (images, galleryEl) => {\n    if (images.length > 0) {\n        const imageEl = images.map(({ largeImageURL, webformatURL, tags, likes, views, comments, downloads }) => {\n            return `<li class=\"gallery-item\">\n                         <a class=\"link\" href=\"${largeImageURL}\">\n                            <img\n                            class=\"gallery-image\"\n                            src=\"${webformatURL}\"\n                            alt=\"${tags}\"\n                            data-source=\"${largeImageURL}\"/>\n                        <div class=\"desc\">\n                            <p class=\"likes\">Likes ${likes}</p>\n                            <p class=\"views\">Views ${views}</p>\n                            <p class=\"comments\">Comments ${comments}</p>\n                            <p class=\"downloads\">Downloads ${downloads}</p>\n                        </div>\n                        </a>\n                    </li>`;\n        }).join('');\n\n        galleryEl.insertAdjacentHTML('beforeend', imageEl);\n        const lightbox = new SimpleLightbox('.gallery-item a');\n\n        lightbox.refresh();\n    } else {\n        console.log('No images found. Please try a different search query.');\n    }\n}\n\nexport default renderPhotoList;\n\n\n\n","'use strict';\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport './css/loader.css'\n\nimport fetchImages from './js/pixabay-api';\nimport renderPhotoList from './js/render-functions';\n\nconst searchForm = document.getElementById('search-form');\nconst inputField = document.querySelector('.searchInput');\nconst galleryEl = document.querySelector('.image-gallery');\n\nfunction clearGallery() {\n    galleryEl.innerHTML = '';\n}\n\nsearchForm.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const userInput = inputField.value.trim();\n\n    const loader = document.createElement('span');\n    loader.classList.add('loader');\n    document.querySelector('.form').after(loader);\n\n    if (!userInput) {\n        console.log('Please enter a search query before submitting.');\n        return;\n    }\n\n    clearGallery();\n\n    fetchImages(userInput)\n        .then(images => {\n            renderPhotoList(images, galleryEl);\n            loader.remove();\n        })\n        .catch(error => {\n            loader.remove();\n            console.log('error');\n        });\n});\n\n\n\n\n"],"names":["BASE_URI","KEY","fetchImages","userInput","searchLink","response","data","iziToast","error","renderPhotoList","images","galleryEl","imageEl","largeImageURL","webformatURL","tags","likes","views","comments","downloads","SimpleLightbox","searchForm","inputField","clearGallery","event","loader"],"mappings":"6vBAKA,MAAMA,EAAW,2BACXC,EAAM,qCAENC,EAAeC,GAAc,CAC/B,MAAMC,EAAa,GAAGJ,CAAQ,QAAQC,CAAG,MAAME,CAAS,2DAExD,OAAO,MAAMC,CAAU,EAClB,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAM,cAAc,EAElC,OAAOA,EAAS,MAC5B,CAAS,EACA,KAAKC,IACEA,EAAK,KAAK,SAAW,GACrBC,EAAS,KAAK,CACV,QAAS,2EACT,aAAc,UACd,gBAAiB,UACjB,UAAW,UACX,SAAU,WACV,MAAO,MAC3B,CAAiB,EAEED,EAAK,KACf,EACA,MAAME,GAAS,CACZ,QAAQ,IAAI,sBAAsB,CAC9C,CAAS,CACT,ECxBMC,EAAkB,CAACC,EAAQC,IAAc,CAC3C,GAAID,EAAO,OAAS,EAAG,CACnB,MAAME,EAAUF,EAAO,IAAI,CAAC,CAAE,cAAAG,EAAe,aAAAC,EAAc,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IACvF;AAAA,iDAC8BN,CAAa;AAAA;AAAA;AAAA,mCAG3BC,CAAY;AAAA,mCACZC,CAAI;AAAA,2CACIF,CAAa;AAAA;AAAA,qDAEHG,CAAK;AAAA,qDACLC,CAAK;AAAA,2DACCC,CAAQ;AAAA,6DACNC,CAAS;AAAA;AAAA;AAAA,0BAI7D,EAAE,KAAK,EAAE,EAEVR,EAAU,mBAAmB,YAAaC,CAAO,EAChC,IAAIQ,EAAe,iBAAiB,EAE5C,QAAO,CACxB,MACQ,QAAQ,IAAI,uDAAuD,CAE3E,ECvBMC,EAAa,SAAS,eAAe,aAAa,EAClDC,EAAa,SAAS,cAAc,cAAc,EAClDX,EAAY,SAAS,cAAc,gBAAgB,EAEzD,SAASY,GAAe,CACpBZ,EAAU,UAAY,EAC1B,CAEAU,EAAW,iBAAiB,SAAU,SAAUG,EAAO,CACnDA,EAAM,eAAc,EAEpB,MAAMrB,EAAYmB,EAAW,MAAM,KAAI,EAEjCG,EAAS,SAAS,cAAc,MAAM,EAI5C,GAHAA,EAAO,UAAU,IAAI,QAAQ,EAC7B,SAAS,cAAc,OAAO,EAAE,MAAMA,CAAM,EAExC,CAACtB,EAAW,CACZ,QAAQ,IAAI,gDAAgD,EAC5D,MACH,CAEDoB,IAEArB,EAAYC,CAAS,EAChB,KAAKO,GAAU,CACZD,EAAgBC,EAAQC,CAAS,EACjCc,EAAO,OAAM,CACzB,CAAS,EACA,MAAMjB,GAAS,CACZiB,EAAO,OAAM,EACb,QAAQ,IAAI,OAAO,CAC/B,CAAS,CACT,CAAC"}